{"version":3,"sources":["blue_white_gorizontal.svg","components/FacebookLogin.js","fetch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","fbPermissions","FacebookLogin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","statusChangeCallback","res","status","window","FB","api","concat","authResponse","userID","response","error","checkPermissions","requiredPermissions","data","onLogin","accessToken","loginFunction","logoutFunction","fbLoginButton","widthController","state","loggedIn","style","width","offsetWidth","self","d","s","id","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","fbAsyncInit","init","appId","SERVER_PARAMS","FACEBOOK_APP_ID","cookie","xfbml","version","AppEvents","logPageView","getLoginStatus","Event","subscribe","onclick","login","scope","string","permissionsToCheck","split","length","grantedPermissions","_","keyBy","i","currentItem","_this2","_this$props","additionalClassName","additionalWrapperClassName","FBButtonClass","react_default","a","className","ref","item","Fragment","spin","size","React","Component","defaultProps","basicConfig","keep","duration","arguments","undefined","icon","type","color","placement","notify","message","description","keepActive","notification","objectSpread","allowedMethods","fetch","rawMethod","url","stringify","method","String","toLowerCase","exec","request","includes","Promise","reject","handler","ok","body","queryObj","qs","query","then","send","SafeFetch","errorHandler","defaultErrorHandler","handleError","err","JSON","catch","ERROR","obj","_len","requestsParams","Array","_key","all","map","reqParams","apply","toConsumableArray","result","safeFetch","fetchFbPages","_ref2","asyncToGenerator","regenerator_default","mark","_callee","_ref","onFetch","token","requestLink","wrap","_context","prev","next","get","sent","filter","page","indexOf","tasks","stop","_x","_x2","copyToClipboard","text","customMessage","textArea","position","top","left","height","padding","border","outline","boxShadow","background","value","appendChild","select","execCommand","info","removeChild","App","pages","selectedPage","logo","alt","minHeight","marginBottom","FacebookLogin_FacebookLogin","setState","es_select","onChange","bot_id","find","Option","key","name","input","Group","compact","es_button","ghost","onClick","access_token","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d8a58e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blue_white_gorizontal.2afeea96.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport { Spin } from 'antd';\n\nexport const fbPermissions =\n    'public_profile,email,pages_show_list,pages_messaging,manage_pages,ads_read,ads_management,pages_messaging_subscriptions';\n\nexport default class FacebookLogin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.fbLoginButton = null;\n        this.widthController = null;\n        this.state = {\n            loggedIn: props.loggedIn,\n        };\n    }\n    componentDidMount() {\n        this.fbLoginButton.style.width = `${this.widthController.offsetWidth + 20}px`;\n        const self = this;\n        (function(d, s, id) {\n            var js, fjs = d.getElementsByTagName(s)[0];\n            if (d.getElementById(id)) return;\n            js = d.createElement(s);\n            js.id = id;\n            js.src = '//connect.facebook.net/en_US/sdk.js';\n            fjs.parentNode.insertBefore(js, fjs);\n        })(document, 'script', 'facebook-jssdk');\n        window.fbAsyncInit = function() {\n            window.FB.init({\n                appId: window.SERVER_PARAMS.FACEBOOK_APP_ID,\n                cookie: true, // enable cookies to allow the server to access the session\n                xfbml: true, // parse social plugins on this page\n                version: 'v3.1', // use version 3.1\n            });\n            window.FB.AppEvents.logPageView();\n            window.FB.getLoginStatus(function(response) {\n                self.statusChangeCallback(response);\n            });\n            window.FB.Event.subscribe('auth.login', self.statusChangeCallback);\n            window.FB.Event.subscribe('auth.logout', self.statusChangeCallback);\n            self.fbLoginButton.onclick = () =>\n                window.FB.login(self.statusChangeCallback, {\n                    scope: fbPermissions,\n                });\n        };\n    }\n    componentDidUpdate() {\n        this.fbLoginButton.style.width = `${this.widthController.offsetWidth + 20}px`;\n    }\n    statusChangeCallback = res => {\n        if (res.status === 'connected') {\n            window.FB.api(`/${res.authResponse.userID}/permissions`, response => {\n                if (\n                    response &&\n                    !response.error &&\n                    this.checkPermissions(this.props.requiredPermissions, response.data)\n                ) {\n                    if(this.props.onLogin) this.props.onLogin(true, res.authResponse.accessToken);\n                    this.props.loginFunction(res.authResponse.accessToken);\n                }\n            });\n        } else {\n            if(this.props.onLogin && res.authResponse) this.props.onLogin(false, res.authResponse.accessToken);\n            this.props.logoutFunction();\n        }\n    };\n    checkPermissions(string, data) {\n        let result = true;\n        const permissionsToCheck = string.split(',');\n        if (data.length < permissionsToCheck.length) return false;\n        const grantedPermissions = _.keyBy(data, 'permission');\n        for (let i = 0; i < permissionsToCheck.length; i++) {\n            const currentItem = grantedPermissions[permissionsToCheck[i]];\n            if (!currentItem || currentItem.status !== 'granted')\n                return false;\n        }\n        return result;\n    };\n    render() {\n        const { additionalClassName, additionalWrapperClassName } = this.props;\n        const { loggedIn } = this.props;\n        const FBButtonClass = loggedIn ? 'h-disabled' : '';\n        return (\n            <div\n                className={`fb-login-button-wrap ${additionalWrapperClassName || ''}`}\n            >\n                <div\n                    className={`my-fb-login-button ${FBButtonClass} ${additionalClassName || ''}`}\n                    ref={item => this.fbLoginButton = item}\n                >\n                    <span ref={item => this.widthController = item}>{\n                        !loggedIn ?\n                            loggedIn === null ?\n                                <React.Fragment>\n                                    <span className=\"fb-button-text\">Establishing connection with Facebook</span>\n                                    <Spin size=\"small\" className=\"h-padding-l-5\" />\n                                </React.Fragment> :\n                                <span className=\"fb-button-text login\">Connect Facebook account</span> :\n                            <span className=\"fb-button-text login\">Connected with Facebook</span>\n                    }</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nFacebookLogin.defaultProps = {\n    requiredPermissions: fbPermissions,\n    logoutFunction: () => {},\n};\n\nFacebookLogin.propTypes = {\n    loginFunction: PropTypes.func.isRequired,\n    onLogin: PropTypes.func,\n    logoutFunction: PropTypes.func,\n    loggedIn: PropTypes.bool,\n    additionalClassName: PropTypes.string,\n    requiredPermissions: PropTypes.string,\n};\n","import React from 'react';\nimport request from 'superagent';\nimport _ from 'lodash';\nimport qs from 'qs';\n\nimport { notification, Icon } from 'antd';\n\n\nconst basicConfig = (keep, duration = 3) => ({\n    duration: keep ? null : duration,\n    icon: <Icon type=\"check-circle\" style={{ color: 'green' }} />,\n    placement: 'bottomRight',\n});\n\nconst notify = {\n    error: (message, description, keepActive, duration) => {\n        notification.error({\n            ...basicConfig(keepActive, duration),\n            icon: <Icon type=\"close-circle\" style={{ color: 'red' }} />,\n            message,\n            description,\n        });\n    },\n    success: (message, description, keepActive, duration) => {\n        notification.success({\n            ...basicConfig(keepActive, duration),\n            message,\n            description,\n        });\n    },\n    fileWarning: (message, description, keepActive, duration) => {\n        notification.warning({\n            ...basicConfig(keepActive, duration),\n            icon: <Icon type=\"file-exclamation\" theme=\"twoTone\" twoToneColor=\"#fadb14\" />,\n            message,\n            description,\n        });\n    },\n    info: (message, description, keepActive, duration) => {\n        notification.info({\n            ...basicConfig(keepActive, duration),\n            message,\n            description,\n        });\n    },\n};\n\n\nconst allowedMethods = ['get', 'post', 'put', 'delete'];\nconst allowedFormMethods = ['post', 'put'];\n\nfunction fetch(rawMethod = '', url = '', data = {}, stringify = false) {\n    const method = String(rawMethod).toLowerCase();\n    const exec = request[method];\n    if(!_.includes(allowedMethods, method)) {\n        return Promise.reject(`Not valid method \"${rawMethod}\"`);\n    }\n    const handler = (data) => {\n        if(!data.ok) throw data.body;\n        return data.body;\n    };\n    if(method === 'get') {\n        const queryObj = stringify ? qs.stringify(data) : data;\n        return exec(url)\n            .query(queryObj)\n            .then(handler);\n    }\n    if(method === 'delete') {\n        return exec(url)\n            .then(handler);\n    }\n    return exec(url)\n        .type('json')\n        .send(data)\n        .then(handler);\n}\n\nexport default class SafeFetch {\n\n    static ERROR = 'ERROR';\n    static defaultErrorHandler(err) { notify.error('Error', JSON.stringify(err)); }\n\n    constructor(errorHandler = SafeFetch.defaultErrorHandler, handleError = true) {\n        this.errorHandler = errorHandler;\n        this.handleError = handleError;\n    }\n\n    fetch(method, url = '', obj = {}) {\n        return fetch(method, url, obj).catch((err) => {\n            if(this.handleError) {\n                this.errorHandler(err);\n            }\n            return SafeFetch.ERROR;\n        });\n    }\n\n    get(url, obj) {\n        return this.fetch('GET', url, obj);\n    }\n\n    put(url, obj) {\n        return this.fetch('PUT', url, obj);\n    }\n\n    post(url, obj) {\n        return this.fetch('POST', url, obj);\n    }\n\n    delete(url, obj) {\n        return this.fetch('DELETE', url, obj);\n    }\n\n    multiple(...requestsParams) {\n        return Promise\n            .all(requestsParams.map(reqParams => fetch(...reqParams)))\n            .catch((err) => {\n                this.errorHandler(err);\n                return SafeFetch.ERROR;\n            });\n    }\n\n    static isError(result) {\n        return result === SafeFetch.ERROR;\n    }\n\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport { Button, Input, Select, notification } from 'antd';\nimport './App.css';\nimport logo from './blue_white_gorizontal.svg';\nimport FacebookLogin from './components/FacebookLogin';\nimport SafeFetch from './fetch';\n\n\nconst REQUIRED_FB_PERMISSIONS = 'pages_messaging_subscriptions';\nconst FB_API_URL = 'https://graph.facebook.com/v3.2/';\nconst safeFetch = new SafeFetch();\n\n\nconst fetchFbPages = async ({ loggedIn, token }, onFetch) => {\n  const requestLink = `${FB_API_URL}me/accounts?limit=200&access_token=${token}`;\n  const res = await safeFetch.get(requestLink);\n  onFetch(_.filter(res.data, page => _.indexOf(page.tasks, 'MANAGE') !== -1));\n};\n\n\nexport function copyToClipboard(text, customMessage) {\n  const textArea = document.createElement('textarea');\n\n  textArea.style.position = 'fixed';\n  textArea.style.top = 0;\n  textArea.style.left = 0;\n  textArea.style.width = '2em';\n  textArea.style.height = '2em';\n  textArea.style.padding = 0;\n  textArea.style.border = 'none';\n  textArea.style.outline = 'none';\n  textArea.style.boxShadow = 'none';\n  textArea.style.background = 'transparent';\n  textArea.value = text;\n\n  document.body.appendChild(textArea);\n  textArea.select();\n\n  try {\n    document.execCommand('copy');\n    notification.info({\n      message: 'Copied',\n      placement: 'bottomRight',\n      description: customMessage || `Text successful copied: ${text}`,\n    });\n  } catch (err) {\n    notification.error({\n      message: 'Error',\n      placement: 'bottomRight',\n      description: 'Unable to copy text.',\n    });\n  }\n\n  document.body.removeChild(textArea);\n}\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false,\n      token: '',\n      pages: [],\n      selectedPage: null,\n    };\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <div style={{ minHeight: 150 }}>\n              <div\n                  className=\"App-link\"\n                  style={{ marginBottom: 10 }}\n              >\n                <FacebookLogin\n                    requiredPermissions={REQUIRED_FB_PERMISSIONS}\n                    additionalWrapperClassName=\"fb-button-margin-0 h-display-inline-block\"\n                    additionalClassName=\"h-margin-0\"\n                    loggedIn={this.state.loggedIn}\n                    loginFunction={token => this.setState({ token, loggedIn: true })}\n                    onLogin={(loggedIn, token) => {\n                      fetchFbPages({ loggedIn, token }, pages => this.setState({ pages }));\n                    }}\n                />\n              </div>\n              <div style={{ marginBottom: 10 }}>\n                {this.state.loggedIn ? (\n                      <Select\n                          style={{ width: 300 }}\n                          value={_.get(this.state.selectedPage, 'id', null)}\n                          onChange={bot_id => this.setState({ selectedPage: _.find(this.state.pages, { id: bot_id }) })}\n                      >\n                        {this.state.pages.map(page => (\n                            <Select.Option\n                                key={page.id}\n                                value={page.id}\n                            >\n                              {page.name}\n                            </Select.Option>\n                        ))}\n                      </Select>\n                ) : null}\n              </div>\n              <div>\n                  {this.state.selectedPage ? (\n                      <Input.Group compact>\n                          <Button\n                              ghost\n                              onClick={() => copyToClipboard(this.state.selectedPage.access_token)}\n                          >\n                              Copy bot Access Token\n                          </Button>\n                          <Button\n                              ghost\n                              onClick={() => copyToClipboard(this.state.selectedPage.id)}\n                          >\n                              Copy bot ID\n                          </Button>\n                          <Button\n                              ghost\n                              onClick={() => copyToClipboard(this.state.selectedPage.name)}\n                          >\n                              Copy bot Name\n                          </Button>\n                          <Button\n                              ghost\n                              onClick={() => copyToClipboard(this.state.token)}\n                          >\n                              Copy FB user token\n                          </Button>\n                      </Input.Group>\n                  ) : null}\n              </div>\n            </div>\n          </header>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}